IMG Erzeugung Prozess:
  1. unkomprimierte Daten (*.bin) werden mit gzip gepackt => *.gz
  2. *.gz wird mit Img Header erweitert => *.gz.bin
  3. CRC32 Prufsumme wird durch eine einfach Prüfsumme ersetzt.


IMG-Header: 8x4Byte = 32 Byte Header

Img Adr.

 0. Magic Pattern:
      - 0x12345678: New Block, neededs to be flashed
      - 0x87654321: Block, already flashed
      - 0x12344321: To Ram (not implemented)
 4. 0xFFFFFFFF: Reserved
 8. Checksum Image: Starting from Img. Adress 12
12. Checksum Data
16. Size Image von Adress 0: Note: Auf die nächste Flashgrenze aufrunden
20. Size Data
24. Destination Adress, to be programmed
28. Execution Adress, Null = no execution
32. Start of Image


GZIP - Header: siehe https://de.wikipedia.org/wiki/Gzip

u8  uID1; // Magische Zahl (immer 0x1F, 0x8B)
u8  uID2;
u8  uCompressionMethod; // 8 == deflate
u8  uFlags;
u8  uTimeStampD1;
u8  uTimeStampD2;
u8  uTimeStampD3;
u8  uTimeStampD4;
u8  uExtraFlags;
/*
  00 - default compression
  02 - compressor used maximum compression, slowest algorithm
  04 - compressor used fastest algorithm
*/
u8  uOs;
/*
  00 - FAT filesystem (MS-DOS, OS/2, NT/Win32)
  01 - Amiga
  02 - VMS (or OpenVMS)
  03 - Unix
  04 - VM/CMS
  05 - Atari TOS
  06 - HPFS filesystem (OS/2, NT)
  07 - Macintosh
  08 - Z-System
  09 - CP/M 0A - TOPS-20
  0B - NTFS filesystem (NT)
  0C - QDOS
  0D - Acorn RISCOS
  FF - unknown
*/




Beispiel: Original Daten: 4096 Bytes = 0x00001000
          Img (Header(32 Byte) + Gzip-Header (10 Byte) + komprimierte Daten + 8 Byte Ende) : 213 Byte = 0x000000D5

{ 0x12, 0x34, 0x56, 0x78, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x46, 0x6C, 0x00, 0x00, 0x16, 0x66, 0x00, 0x00, 0x00, 0xD5, 0x00, 0x00, 0x10, 0x00, 0x08, 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  ----- Img Header 32 Byte -----
  ----- Magic Pat ------  ---- Reserve ---------  ----- Chk Img  -------  -------Chk Data ------  ------ Size Img ------  ----- Size Data ------  -------- DST Adr -----  ------- Exe Adr ------  
                                                                                                                                                                                                  
  0x1F, 0x8B, 0x08, 0x08, 0xA0, 0xB8, 0xBA, 0x65, 0x02, 0x0B, 0x52, 0x6F, 0x6D, 0x43, 0x6F, 0x6E, 0x73, 0x74, 0x5F, 0x30, 0x58, 0x30, 0x38, 0x30, 0x33, 0x46, 0x30, 0x30, 0x30, 0x5F, 0x30, 0x58, 
  ---- Start of Img Data ....                                                                  
  ---------------------   GZIP Header 10 Byte --------------- --- komprimierte Daten ->
   ID1  ID1    CM   FLG   ------- MTIME --------  XFL    OS

   0x31, 0x30, 0x30, 0x30, 0x2E, 0x62, 0x69, 0x6E, 0x00, 0xF3, 0x75, 0x2A, 0x33, 0x4F, 0x32, 0xF2, 0xCC, 0xCB, 0x64, 0x80, 0x80, 0xE0, 0x10, 0x5F, 0x63, 0x23, 0x1F, 0x13, 0x63, 0x63, 0x67, 0xE7, 
   0x10, 0x33, 0x20, 0xDF, 0x39, 0xBF, 0xA8, 0x24, 0xB5, 0x42, 0xD7, 0xD7, 0x44, 0x27, 0x28, 0x3F, 0x57, 0xC1, 0xC8, 0xD4, 0xCC, 0xDB, 0x49, 0x27, 0x28, 0x31, 0x57, 0xC1, 0xCC, 0xC4, 0xDB, 0x09, 
   0xA4, 0x9E, 0x89, 0x81, 0x41, 0x00, 0x4A, 0x83, 0x59, 0x40, 0x39, 0x06, 0x2C, 0x40, 0x81, 0xE1, 0x00, 0x03, 0x03, 0x23, 0x90, 0xE1, 0x96, 0x93, 0x58, 0x9C, 0xA1, 0xE0, 0xEA, 0x1A, 0x00, 0x95, 
   0x00, 0x6B, 0xFE, 0xC0, 0xCC, 0x01, 0x66, 0x70, 0x30, 0x8C, 0x82, 0x51, 0x30, 0x0A, 0x46, 0xC1, 0x28, 0x18, 0x05, 0xA3, 0x60, 0x14, 0x8C, 0x82, 0x51, 0x30, 0x0A, 0x46, 0xC1, 0x28, 0x18, 0x05, 
   0xA3, 0x80, 0x8A, 0x60, 0x96, 0x08, 0xB0, 0x2F, 0xEE, 0xE3, 0xED, 0x08, 0x00, 0x66, 0x16, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00 };
                                                                                 ----- Ende -----------------------------------
                                                        <-komprimierte Daten --- ------ Chk -----------  --- Size orig Data ---